{
	"info": {
		"_postman_id": "e51c092e-9774-4a17-a93a-934e3da708d9",
		"name": "Prometheus API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Request Invite",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation RequestInvite($email: String!) {\n  requestInvite(email: $email)\n}",
						"variables": "{\n  \"email\": \"test@test.com\"\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify Invite",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query VerifyInvite($code: String!) {\n  verifyInvite(code: $code)\n}",
						"variables": "{\n  \"code\": \"97b45a0a-edb6-4b4c-9e56-9332192792f6\"\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Register",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Register($user: UserInput!) {\n  register(user: $user)\n}",
						"variables": "{\n  \"user\": {\n    \"email\": \"test@test.com\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"inviteCode\": \"97b45a0a-edb6-4b4c-9e56-9332192792f6\",\n    \"password\": \"test-pass\"\n  }\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Login($email: String!, $password: String!) {\n  login(email: $email, password: $password)\n}",
						"variables": "{\n  \"email\": \"test@test.com\",\n  \"password\": \"test-pass\"\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Login OAuth",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation LoginOAuth($user: OAuthUserInput!) {\n  loginOAuth(user: $user)\n}",
						"variables": "{\n    \"user\": {\n        \"email\": \"test@test.com\",\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"provider\": \"google\",\n        \"token\": \"<google-token>\"\n    }\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Request Reset Password",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation RequestPasswordReset($email: String!) {\n  requestPasswordReset(email: $email)\n}",
						"variables": "{\n  \"email\": \"test@test.com\"\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Reset Password",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Login($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n      user {\n          _id\n          role\n          accreditation\n      }\n      token\n  }\n}",
						"variables": "{\n  \"email\": \"test@test.com\",\n  \"password\": \"test-pass\"\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Invite User",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjRhNjYzZmZiZDVmZmJlODcxNjAzNTAiLCJyb2xlIjoidXNlciIsImFjYyI6Im5vbmUiLCJpYXQiOjE2NDkwNDM2Mjd9.8sUii0pTi2PnVu_-rWIRHx1hmBfMG26OV-Gen5Ne-QM",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Invite($email: String!) {\n  inviteUser(email: $email)\n}",
						"variables": "{\n  \"email\": \"test2@test.com\"\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Settings",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjRhNjYzZmZiZDVmZmJlODcxNjAzNTAiLCJyb2xlIjoidXNlciIsImFjYyI6Im5vbmUiLCJpYXQiOjE2NDkwNDM2Mjd9.8sUii0pTi2PnVu_-rWIRHx1hmBfMG26OV-Gen5Ne-QM",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation Invite($email: String!) {\n  inviteUser(email: $email)\n}",
						"variables": "{\n  \"email\": \"test2@test.com\"\n}"
					}
				},
				"url": {
					"raw": "http://localhost:4000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						""
					]
				}
			},
			"response": []
		}
	]
}