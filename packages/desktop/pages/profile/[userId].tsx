import Head from "next/head";
import ProfilePage from "../../app/components/templates/ProfilePage";
import { NextPageWithLayout } from "../../app/types/next-page";
import { useFetchProfile } from "../../app/graphql/queries/UserProfile";
import { useRouter } from "next/router";
import { useSession } from "next-auth/react";
import { Dispatch, ProfileContext } from "../../app/contexts/ProfileContext";

const Profile: NextPageWithLayout = () => {
  const router = useRouter();
  const { data: session } = useSession();
  const { userId } = router.query as Record<string, string>;
  const { data: profileData, refetch } = useFetchProfile(
    userId != "me" ? userId : session?.user!._id!
  );
  const account = profileData?.userProfile;
  const title =
    userId == "me"
      ? "My Profile - Prometheus"
      : `${account?.firstName} ${account?.lastName}`;
  const context: { dispatch: Dispatch } = {
    dispatch: (type) => {
      if (type == "reload") {
        refetch();
      }
    },
  };
  return (
    <div>
      <Head>
        <title>{title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      {account && (
        <>
          <ProfileContext.Provider value={context}>
            <ProfilePage account={account} />
          </ProfileContext.Provider>
        </>
      )}
    </div>
  );
};

Profile.layout = "main";
Profile.middleware = "auth";

export default Profile;
